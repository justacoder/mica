
/*
 ***************************************************************************
 *                  Mica - the Java(tm) Graphics Framework                 *
 ***************************************************************************
 * NOTICE: Permission to use, copy, and modify this software and its       *
 * documentation is hereby granted provided that this notice appears in    *
 * all copies.                                                             *
 *                                                                         *
 * Permission to distribute un-modified copies of this software and its    *
 * documentation is hereby granted provided that no fee is charged and     *
 * that this notice appears in all copies.                                 *
 *                                                                         *
 * SOFTWARE FARM MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE          *
 * SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING, BUT  *
 * NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR  *
 * A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. SOFTWARE FARM SHALL NOT BE   *
 * LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR       *
 * CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE, MODIFICATION OR           *
 * DISTRIBUTION OF THIS SOFTWARE OR ITS DERIVATIVES.                       *
 *                                                                         *
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, AND THE AUTHORS AND      *
 * DISTRIBUTORS HAVE NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT,        *
 * UPDATES, ENHANCEMENTS, OR MODIFICATIONS.                                *
 *                                                                         *
 ***************************************************************************
 *   Copyright (c) 1997-2004 Software Farm, Inc.  All Rights Reserved.     *
 ***************************************************************************
 */


package com.swfm.mica;

/**----------------------------------------------------------------------------------------------
 * This class makes a 'shape' menu that is suitable for adding to a
 * MiEditorMenuBar. Each menu item has status bar and balloon help and
 * most have accelerators and mnemonics.
 * <p>
 * When a menu item is selected by the user one of the following commands
 * are generated:
 * <p>
 * <pre>
 *    Mi_GROUP_COMMAND_NAME
 *    Mi_UNGROUP_COMMAND_NAME
 *    Mi_GROUP_AND_ICONIFY_COMMAND_NAME
 *    Mi_DEICONIFY_COMMAND_NAME
 *    Mi_BRING_TO_FRONT_COMMAND_NAME
 *    Mi_SEND_TO_BACK_COMMAND_NAME
 *    Mi_BRING_FORWARD_COMMAND_NAME
 *    Mi_SEND_BACKWARD_COMMAND_NAME
 * </pre>
 * @version     %I% %G%
 * @author      Michael L. Davis
 * @release 	1.4.1
 * @module 	%M%
 * @language	Java (JDK 1.4)
 *----------------------------------------------------------------------------------------------*/
public class MiShapeMenu extends MiEditorMenu implements MiiCommandNames, MiiDisplayNames, MiiMessages
	{
					/**------------------------------------------------------
	 				 * Constructs a new MiShapeMenu, forwarding commands generated
					 * by this menu to an instance of MiShapeMenuCommands.
					 * @see			MiShapeMenuCommands
					 *------------------------------------------------------*/
	public				MiShapeMenu(MiiCommandManager manager)
		{
		this(new MiShapeMenuCommands(manager), manager);
		}
					/**------------------------------------------------------
	 				 * Constructs a new MiShapeMenu which will send commands
					 * generated by the menu to the given command handler.
					 * @param handler	the command handler
					 * @see 		MiShapeMenuCommands
					 *------------------------------------------------------*/
	public				MiShapeMenu(MiiCommandHandler handler, MiiCommandManager manager)
		{
		super(Mi_SHAPE_MENU_DISPLAY_NAME, manager);

		setCommandHandler(handler);

		appendMenuItem(	Mi_GROUP_MENUITEM_DISPLAY_NAME,		handler, 
							Mi_GROUP_COMMAND_NAME,
							Mi_GROUP_STATUS_HELP_MSG,
							Mi_NO_GROUP_STATUS_HELP_MSG,
							Mi_GROUP_BALLOON_HELP_MSG);

		appendMenuItem(	Mi_UNGROUP_MENUITEM_DISPLAY_NAME,	handler,
							Mi_UNGROUP_COMMAND_NAME,
							Mi_UNGROUP_STATUS_HELP_MSG,
							Mi_NO_UNGROUP_STATUS_HELP_MSG,
							Mi_UNGROUP_BALLOON_HELP_MSG);

		appendSeparator();

		appendMenuItem(	Mi_ICONIFY_MENUITEM_DISPLAY_NAME,	handler, 
							Mi_GROUP_AND_ICONIFY_COMMAND_NAME,
							Mi_GROUP_AND_ICONIFY_STATUS_HELP_MSG,
							Mi_NO_GROUP_AND_ICONIFY_STATUS_HELP_MSG,
							Mi_GROUP_AND_ICONIFY_BALLOON_HELP_MSG);

		appendMenuItem(	Mi_DEICONIFY_MENUITEM_DISPLAY_NAME,	handler, 
							Mi_DEICONIFY_COMMAND_NAME,
							Mi_DEICONIFY_STATUS_HELP_MSG,
							Mi_NO_DEICONIFY_STATUS_HELP_MSG,
							Mi_DEICONIFY_BALLOON_HELP_MSG);

		appendSeparator();

		appendMenuItem(	Mi_BRING_TO_FRONT_MENUITEM_DISPLAY_NAME,handler, 
							Mi_BRING_TO_FRONT_COMMAND_NAME,
							Mi_BRING_TO_FRONT_STATUS_HELP_MSG,
							Mi_NO_BRING_TO_FRONT_STATUS_HELP_MSG,
							Mi_BRING_TO_FRONT_BALLOON_HELP_MSG);

		appendMenuItem(	Mi_SEND_TO_BACK_MENUITEM_DISPLAY_NAME,	handler, 
							Mi_SEND_TO_BACK_COMMAND_NAME,
							Mi_SEND_TO_BACK_STATUS_HELP_MSG,
							Mi_NO_SEND_TO_BACK_STATUS_HELP_MSG,
							Mi_SEND_TO_BACK_BALLOON_HELP_MSG);

		appendMenuItem(	Mi_BRING_FOWARD_MENUITEM_DISPLAY_NAME,	handler, 
							Mi_BRING_FORWARD_COMMAND_NAME,
							Mi_BRING_FORWARD_STATUS_HELP_MSG,
							Mi_NO_BRING_FORWARD_STATUS_HELP_MSG,
							Mi_BRING_FORWARD_BALLOON_HELP_MSG);

		appendMenuItem(	Mi_SEND_BACKWARD_MENUITEM_DISPLAY_NAME,	handler, 
							Mi_SEND_BACKWARD_COMMAND_NAME,
							Mi_SEND_BACKWARD_STATUS_HELP_MSG,
							Mi_NO_SEND_BACKWARD_STATUS_HELP_MSG,
							Mi_SEND_BACKWARD_BALLOON_HELP_MSG);

		}
	}

