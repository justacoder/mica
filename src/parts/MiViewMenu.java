
/*
 ***************************************************************************
 *                  Mica - the Java(tm) Graphics Framework                 *
 ***************************************************************************
 * NOTICE: Permission to use, copy, and modify this software and its       *
 * documentation is hereby granted provided that this notice appears in    *
 * all copies.                                                             *
 *                                                                         *
 * Permission to distribute un-modified copies of this software and its    *
 * documentation is hereby granted provided that no fee is charged and     *
 * that this notice appears in all copies.                                 *
 *                                                                         *
 * SOFTWARE FARM MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE          *
 * SUITABILITY OF THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING, BUT  *
 * NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR  *
 * A PARTICULAR PURPOSE, OR NON-INFRINGEMENT. SOFTWARE FARM SHALL NOT BE   *
 * LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR       *
 * CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE, MODIFICATION OR           *
 * DISTRIBUTION OF THIS SOFTWARE OR ITS DERIVATIVES.                       *
 *                                                                         *
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, AND THE AUTHORS AND      *
 * DISTRIBUTORS HAVE NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT,        *
 * UPDATES, ENHANCEMENTS, OR MODIFICATIONS.                                *
 *                                                                         *
 ***************************************************************************
 *   Copyright (c) 1997-2004 Software Farm, Inc.  All Rights Reserved.     *
 ***************************************************************************
 */

package com.swfm.mica;

/**----------------------------------------------------------------------------------------------
 * This class makes a 'view' menu that is suitable for adding to a
 * MiEditorMenuBar. Each menu item has status bar and balloon help and
 * most have accelerators and mnemonics.
 * <p>
 * When a menu item is selected by the user one of the following commands
 * are generated:
 * <p>
 * <pre>
 *    Mi_ZOOM_IN_COMMAND_NAME
 *    Mi_ZOOM_OUT_COMMAND_NAME
 *    Mi_VIEW_ALL_COMMAND_NAME
 *    Mi_VIEW_PREVIOUS_COMMAND_NAME
 *    Mi_VIEW_NEXT_COMMAND_NAME
 *    Mi_ZOOM_TO_FIT_COMMAND_NAME
 *    Mi_ZOOM_TO_FIT_WIDTH_COMMAND_NAME
 *    Mi_ZOOM_TO_FIT_HEIGHT_COMMAND_NAME
 *    Mi_REDRAW_COMMAND_NAME
 *    Mi_DISPLAY_TOOL_BAR_COMMAND_NAME
 *    Mi_HIDE_TOOL_BAR_COMMAND_NAME
 *    Mi_DISPLAY_STATUS_BAR_COMMAND_NAME
 *    Mi_HIDE_STATUS_BAR_COMMAND_NAME
 * </pre>
 * @version     %I% %G%
 * @author      Michael L. Davis
 * @release 	1.4.1
 * @module 	%M%
 * @language	Java (JDK 1.4)
 *----------------------------------------------------------------------------------------------*/
public class MiViewMenu extends MiEditorMenu implements MiiCommandNames, MiiMessages
	{
					/**------------------------------------------------------
	 				 * Constructs a new MiViewMenu, forwarding commands generated
					 * by this menu to an instance of MiViewMenuCommands.
					 * @see			MiViewMenuCommands
					 *------------------------------------------------------*/
	public				MiViewMenu(MiiCommandManager manager)
		{
		this(new MiViewMenuCommands(manager), manager);
		}
					/**------------------------------------------------------
	 				 * Constructs a new MiViewMenu which will send commands
					 * generated by the menu to the given command handler.
					 * @param handler	the command handler
					 * @see 		MiViewMenuCommands
					 *------------------------------------------------------*/
	public				MiViewMenu(
						MiiCommandHandler handler, 
						MiiCommandManager manager)
		{
		super(Mi_VIEW_MENU_DISPLAY_NAME, manager);

		setCommandHandler(handler);

		appendMenuItem(	Mi_ZOOM_IN_MENUITEM_DISPLAY_NAME,
								handler, 
								Mi_ZOOM_IN_COMMAND_NAME,
								Mi_ZOOM_IN_STATUS_HELP_MSG,
								Mi_NO_ZOOM_IN_STATUS_HELP_MSG,
								Mi_ZOOM_IN_BALLOON_HELP_MSG);
		appendMenuItem(	Mi_ZOOM_OUT_MENUITEM_DISPLAY_NAME,
								handler, 
								Mi_ZOOM_OUT_COMMAND_NAME,
								Mi_ZOOM_OUT_STATUS_HELP_MSG,
								Mi_NO_ZOOM_OUT_STATUS_HELP_MSG,
								Mi_ZOOM_OUT_BALLOON_HELP_MSG);

		appendSeparator();

		appendMenuItem(	Mi_VIEW_ALL_MENUITEM_DISPLAY_NAME,
								handler, 
								Mi_VIEW_ALL_COMMAND_NAME,
								Mi_VIEW_ALL_STATUS_HELP_MSG,
								Mi_NO_VIEW_ALL_STATUS_HELP_MSG,
								Mi_VIEW_ALL_BALLOON_HELP_MSG);
		appendMenuItem(	Mi_VIEW_PREVIOUS_MENUITEM_DISPLAY_NAME,	
								handler, 
								Mi_VIEW_PREVIOUS_COMMAND_NAME,
								Mi_VIEW_PREVIOUS_STATUS_HELP_MSG,
								Mi_NO_VIEW_PREVIOUS_STATUS_HELP_MSG,
								Mi_VIEW_PREVIOUS_BALLOON_HELP_MSG);
		appendMenuItem(	Mi_VIEW_NEXT_MENUITEM_DISPLAY_NAME,
								handler, 
								Mi_VIEW_NEXT_COMMAND_NAME,
								Mi_VIEW_NEXT_STATUS_HELP_MSG,
								Mi_NO_VIEW_NEXT_STATUS_HELP_MSG,
								Mi_VIEW_NEXT_BALLOON_HELP_MSG);

		appendSeparator();

		appendMenuItem(	Mi_ZOOM_HOME_MENUITEM_DISPLAY_NAME,
								handler, 
								Mi_ZOOM_HOME_COMMAND_NAME,
								Mi_ZOOM_HOME_STATUS_HELP_MSG,
								Mi_NO_ZOOM_HOME_STATUS_HELP_MSG,
								Mi_ZOOM_HOME_BALLOON_HELP_MSG);
		appendMenuItem(	Mi_ZOOM_TO_FIT_MENUITEM_DISPLAY_NAME,
								handler, 
								Mi_ZOOM_TO_FIT_COMMAND_NAME,
								Mi_ZOOM_TO_FIT_STATUS_HELP_MSG,
								Mi_NO_ZOOM_TO_FIT_STATUS_HELP_MSG,
								Mi_ZOOM_TO_FIT_BALLOON_HELP_MSG);

		appendMenuItem(	Mi_ZOOM_TO_FIT_WIDTH_MENUITEM_DISPLAY_NAME,
								handler, 
								Mi_ZOOM_TO_FIT_WIDTH_COMMAND_NAME,
								Mi_ZOOM_TO_FIT_WIDTH_STATUS_HELP_MSG,
								Mi_NO_ZOOM_TO_FIT_WIDTH_STATUS_HELP_MSG,
								Mi_ZOOM_TO_FIT_WIDTH_BALLOON_HELP_MSG);

		appendMenuItem(	Mi_ZOOM_TO_FIT_HEIGHT_MENUITEM_DISPLAY_NAME,
								handler, 
								Mi_ZOOM_TO_FIT_HEIGHT_COMMAND_NAME,
								Mi_ZOOM_TO_FIT_HEIGHT_STATUS_HELP_MSG,
								Mi_NO_ZOOM_TO_FIT_HEIGHT_STATUS_HELP_MSG,
								Mi_ZOOM_TO_FIT_HEIGHT_BALLOON_HELP_MSG);

		appendSeparator();

		appendMenuItem(	Mi_REDRAW_MENUITEM_DISPLAY_NAME,	
								handler, 
								Mi_REDRAW_COMMAND_NAME,
								Mi_REDRAW_STATUS_HELP_MSG,
								Mi_NO_REDRAW_STATUS_HELP_MSG,
								Mi_REDRAW_BALLOON_HELP_MSG);

		appendSeparator();

		appendBooleanMenuItem(	Mi_DISPLAY_TOOL_BAR_MENUITEM_DISPLAY_NAME,	
								handler, 
								Mi_DISPLAY_TOOL_BAR_COMMAND_NAME,
								Mi_HIDE_TOOL_BAR_COMMAND_NAME);

		appendBooleanMenuItem(	Mi_DISPLAY_STATUS_BAR_MENUITEM_DISPLAY_NAME,
								handler, 
								Mi_DISPLAY_STATUS_BAR_COMMAND_NAME,
								Mi_HIDE_STATUS_BAR_COMMAND_NAME);

		setHelpMessages(Mi_DISPLAY_TOOL_BAR_COMMAND_NAME,
				Mi_DISPLAY_TOOL_BAR_STATUS_HELP_MSG,
				Mi_NO_DISPLAY_TOOL_BAR_STATUS_HELP_MSG,
				Mi_DISPLAY_TOOL_BAR_BALLOON_HELP_MSG);

		setHelpMessages(Mi_DISPLAY_STATUS_BAR_COMMAND_NAME,
				Mi_DISPLAY_STATUS_BAR_STATUS_HELP_MSG,
				Mi_NO_DISPLAY_STATUS_BAR_STATUS_HELP_MSG,
				Mi_DISPLAY_STATUS_BAR_BALLOON_HELP_MSG);

		}
	}

